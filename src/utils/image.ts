import { Node } from "gatsby";
import {
  getSrc as getGatsbySrc,
  getImage as getGatsbyImage,
  IGatsbyImageData,
} from "gatsby-plugin-image";
import {
  IGatsbyImageDataParent,
  ImageDataLike as GatsbyImageDataLike,
} from "gatsby-plugin-image/dist/src/components/hooks";

/** https://github.com/ethereum/ethereum-org-website/pull/7702 */

type FileNodeNull = Partial<Node> & {
  childImageSharp?: IGatsbyImageDataParent<Partial<Node>> | null;
};

export type ImageDataLike = GatsbyImageDataLike | FileNodeNull;

const isFileNodeNull = (
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  node: FileNodeNull | any
): node is FileNodeNull => node?.childImageSharp === null;

/**
 * Custom temporary `getImage` function to accept `null` values in the passed
 * node image.
 *
 * This was partially fixed in https://github.com/gatsbyjs/gatsby/issues/35748#issuecomment-1188884754
 * but it still does not accept null values which are generated by GraphQL Typegen
 */
export function getImage(
  node: ImageDataLike | null
): IGatsbyImageData | undefined {
  if (!node) {
    return;
  }

  if (isFileNodeNull(node)) {
    return;
  }

  return getGatsbyImage(node);
}

/**
 * Custom temporary `getSrc` function to accept `null` values in the passed
 * node image.
 */
export function getSrc(node: ImageDataLike | null): string | undefined {
  if (!node) {
    return;
  }

  if (isFileNodeNull(node)) {
    return;
  }

  return getGatsbySrc(node);
}
